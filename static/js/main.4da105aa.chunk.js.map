{"version":3,"sources":["Table.js","CalculaPPP.js","CalculaPPS.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","total_num_creditos","total_nota_creditos","num","Math","round","_this2","items","reduce","prev","cur","creditos","nota_creditos","react_default","a","createElement","className","id","map","item","key","materia","nota1","aproximarDecimales","nota1p","nota2","nota2p","nota3","nota3p","nota_curso","React","Component","CalculaPPP","MateriaRef","createRef","NotaCorte1Ref","NotaCorte2Ref","NotaCorte3Ref","CreditosRef","handleOnClick","event","myRef","current","scrollIntoView","behavior","block","componentDidMount","componentDidUpdate","mostrarResultadoPPP","length","src_Table","e","preventDefault","Materia","value","NotaCorte1","parseFloat","NotaCorte2","NotaCorte3","Creditos","parseInt","toConsumableArray","push","setState","target","reset","onSubmit","calcularPPP","bind","htmlFor","type","step","name","placeholder","ref","required","min","max","onClick","href","CalculaPPS","CCRef","PCRef","CSRef","mostrarResultado","nota4","CC","PC","CS","calcularPPS","App","nota1Ref","nota2Ref","tabIndex","src","logo","alt","esm","forceRenderTabPanel","selectedIndex","onSelect","calcularNota","src_CalculaPPS","src_CalculaPPP","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4da105aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from './logo.png';\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {total_num_creditos: 0,total_nota_creditos: 0}\r\n        //this.state = { }; //Para los tabs\r\n      }\r\n    aproximarDecimales(num){\r\n        \r\n        return +(Math.round(num + \"e+2\")  + \"e-2\");\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n      const items = this.props.items;\r\n      \r\n      var total_num_creditos = this.props.items.reduce(function(prev, cur) {\r\n        return prev + cur.creditos;\r\n      }, 0);\r\n\r\n      var total_nota_creditos = this.props.items.reduce(function(prev, cur) {\r\n        return prev + cur.nota_creditos;\r\n      }, 0);\r\n      \r\n\r\n      return (\r\n        <div className=\"card\" id=\"Table\">\r\n          <table className=\"table table-bordered table-responsive\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Cursos</th>\r\n                <th>Corte 1</th>\r\n                <th>Corte 1(%)</th>\r\n                <th>Corte 2</th>\r\n                <th>Corte 2(%)</th>\r\n                <th>Corte 3</th>\r\n                <th>Corte 3(%)</th>\r\n                <th>Créditos</th>\r\n                <th>Nota del curso</th>\r\n                <th>Nota x Créditos</th>\r\n              </tr>\r\n              {items.map(item => {\r\n\r\n                  \r\n                  //console.log(this.state.total_num_creditos);\r\n                  //console.log('Ok :'+total_num_creditos);\r\n                return (\r\n                  <tr key={item.key}>\r\n                    <td>{item.materia}</td>\r\n                    <td>{item.nota1}</td>\r\n                    <td>{this.aproximarDecimales(item.nota1p)}</td>\r\n                    <td>{item.nota2}</td>\r\n                    <td>{this.aproximarDecimales(item.nota2p)}</td>\r\n                    <td>{item.nota3}</td>\r\n                    <td>{this.aproximarDecimales(item.nota3p)}</td>\r\n                    <td>{item.creditos}</td>\r\n                    <td>{this.aproximarDecimales(item.nota_curso)}</td>\r\n                    <td>{this.aproximarDecimales(item.nota_creditos)}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n                    \r\n                  <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>{total_num_creditos}</th>\r\n                    <th></th>\r\n                    <th>{this.aproximarDecimales(total_nota_creditos)}</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>PPS</th>\r\n                    <th>{this.aproximarDecimales(total_nota_creditos/total_num_creditos)}</th>\r\n                  </tr>\r\n                </tfoot>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Table;","import React from 'react';\nimport logo from './logo.png';\nimport Table from './Table';\nimport ReactDOM from 'react-dom';\n\nclass CalculaPPP extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {materia:0,nota1:0,nota2:0,nota3:0,creditos:0,key:0,items:[]}\n    this.myRef = React.createRef();\n  }\n\n  \n  \n  /* Variables para la parte del calculo promedio ponderado del periodo */\n MateriaRef = React.createRef();\n NotaCorte1Ref = React.createRef();\n NotaCorte2Ref = React.createRef();\n NotaCorte3Ref = React.createRef();\n CreditosRef = React.createRef();\n  /* Fin Variables para la parte del calculo promedio ponderado del periodo */\n  \n  handleOnClick = (event) => {\n    //.current is verification that your element has rendered\n    if(this.myRef.current){\n      this.myRef.current.scrollIntoView({ \n         behavior: \"smooth\", \n         block: \"nearest\"\n      })\n  }\n}\n\ncomponentDidMount = () => this.handleOnClick();\ncomponentDidUpdate = () => this.handleOnClick();\n\n  /* Metodo para el calculo promedio ponderado del periodo*/\n  \n  calcularPPP(e) {\n    e.preventDefault();    \n    let key = this.state.key;\n    let Materia = this.MateriaRef.current.value;\n    let NotaCorte1 = parseFloat(this.NotaCorte1Ref.current.value);\n    let NotaCorte2 = parseFloat(this.NotaCorte2Ref.current.value);\n    let NotaCorte3 = parseFloat(this.NotaCorte3Ref.current.value);\n    let Creditos = parseInt(this.CreditosRef.current.value);\n    \n    let items = [...this.state.items];\n\n    items.push({\n      key:key,\n      materia: Materia, \n      nota1: NotaCorte1,\n      nota1p: NotaCorte1*0.30,\n      nota2: NotaCorte2,\n      nota2p: NotaCorte2*0.35,\n      nota3: NotaCorte3,\n      nota3p: NotaCorte3*0.35,\n      creditos: Creditos,\n      nota_curso: NotaCorte1*0.30+NotaCorte2*0.35+NotaCorte3*0.35,\n      nota_creditos: Creditos*(NotaCorte1*0.30+NotaCorte2*0.35+NotaCorte3*0.35)\n    });\n\n    this.setState({\n      items,\n      key:this.state.key+1,\n      materia: '', \n      nota1: 0,\n      nota1p: 0,\n      nota2: 0,\n      nota2p: 0,\n      nota3: 0,\n      nota3p: 0,\n      creditos: 0,\n      nota_curso:0,\n      nota_creditos:0\n    });\n  \n    this.state.key += 1;\n    e.target.reset();\n\n    \n    return this.state.items;\n  }\n\n  mostrarResultadoPPP = () => {\n\n    if (this.state.items.length === 0) return null;\n    const items = this.state.items;\n    \n    return (\n      <div>\n      <h3 className=\"text-center alert alert-info\">\n      Tu promedio ponderado del semestre (PPS) es el siguiente:<br/><h2><strong className=\"\">{this.state.materia}</strong></h2>\n      </h3>\n      \n      \n      <Table items={ this.state.items }/>\n\n      </div>\n    )\n  }\n   \n  /* Fin Metodo para el calculo promedio ponderado del periodo */\n  \n\n  render() {\n    return (\n      <div>\n      <h2 className=\"text-center\">¿Cómo calcular el promedio ponderado del semestre?</h2>\n      <small>Ten en cuenta que esta calculadora corresponde a un ejercicio de simulación, por lo que el resultado obtenido puede variar con respecto a los cálculos de Banner. </small>\n      <br/><br/>\n      <h4>Digita la información correspondiente de cada una de las asignaturas que tienes matriculadas en el semestre. Al finalizar podrás visualizar la tabla con el cálculo del PPS.</h4>\n      <br/>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={this.calcularPPP.bind(this)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"Materia\" className=\"text-secondary\">Nombre del curso</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                step=\".01\"\n                name=\"Materia\"\n                placeholder=\"Digite el nombre del curso\"\n                  ref={this.MateriaRef}\n                  required=\"required\"\n              />\n            </div>\n            <div className=\"row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"NotaCorte1\" className=\"text-secondary\">Nota 1er corte</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                step=\".01\"\n                name=\"NotaCorte1\"\n                placeholder=\"Digita la nota del 1er corte\"\n                ref={this.NotaCorte1Ref}\n                required=\"required\"\n                min=\"0\"\n                max=\"5\"\n              />\n            </div>\n\n            <div className=\"form-group col\">\n            <label htmlFor=\"NotaCorte2\" className=\"text-secondary\">Nota 2do corte</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                step=\".01\"\n                name=\"NotaCorte2\"\n                placeholder=\"Digita la nota del 2do corte\"\n                ref={this.NotaCorte2Ref}\n                required=\"required\"\n                min=\"0\"\n                max=\"5\"\n              />\n            </div>\n\n            <div className=\"form-group col\">\n            <label htmlFor=\"NotaCorte3\" className=\"text-secondary\">Nota 3er corte</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                step=\".01\"\n                name=\"NotaCorte3\"\n                placeholder=\"Digita la nota del 3er corte\"\n                ref={this.NotaCorte3Ref}\n                required=\"required\"\n                min=\"0\"\n                max=\"5\"\n              />\n            </div>\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"Creditos\" className=\"text-secondary\">Número de créditos de la asignatura</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                step=\"1\"\n                name=\"Creditos\"\n                placeholder=\"Digita los créditos del curso\"\n                ref={this.CreditosRef}\n                required=\"required\"\n                min=\"0\"\n              />\n            </div>\n\n\n            <div className=\"form-group text-center\">\n              <input onClick={this.handleOnClick} type=\"submit\" value=\"Siguiente Asignatura\" className=\"btn btn-success mr-2\" />\n              <a href=\"/calculadora3ernota/\" className=\"btn btn-info\">Reiniciar</a>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"mt-2\" ref={this.myRef}>\n        {this.mostrarResultadoPPP()}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default CalculaPPP;\n","import React from 'react';\nimport logo from './logo.png';\n\nclass CalculaPPS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {nota4: 0}\n    this.myRef = React.createRef();\n  }\n\n  aproximarDecimales(num){\n        \n    return +(Math.round(num + \"e+2\")  + \"e-2\");\n  }\n  \n  /*\n    CC : Creditos intentados\n    PC : Puntos de calidad PGA totales\n    CS : Creditos Matriculados en el semestre\n  */\n  CCRef = React.createRef();\n  PCRef = React.createRef();\n  CSRef = React.createRef();  \n\n  handleOnClick = (event) => {\n    //.current is verification that your element has rendered\n    if(this.myRef.current){\n      this.myRef.current.scrollIntoView({ \n         behavior: \"smooth\", \n         block: \"nearest\"\n      })\n  }\n}\n\ncomponentDidMount = () => this.handleOnClick();\ncomponentDidUpdate = () => this.handleOnClick();\n\n  calcularPPS(e) {\n    e.preventDefault();    \n\n    let CC = parseInt(this.CCRef.current.value);\n    let PC = parseInt(this.PCRef.current.value);\n    let CS = parseInt(this.CSRef.current.value);\n    \n    this.setState({\n      nota4: (3.2*(CC+CS)-(CC*(PC/CC)))/CS\n    });\n\n    e.target.reset();\n    return this.state.nota4;\n  }\n\n  mostrarResultado = () => {\n\n    if (this.state.nota4 === 0) return null;\n\n    return (\n      <h3 className=\"text-center alert alert-info\">\n        PPS requerido para superar PA o RA:<br/><h2><strong className=\"\">{this.aproximarDecimales(this.state.nota4)}</strong></h2>\n      </h3>\n    )\n  }\n\n  render() {\n    return (\n            <div>\n            <h2 className=\"text-center\">¿Cuál es el promedio ponderado del semestre (PPS) que requieres para superar la condición de Prueba Académica (PA) o Recuperación Académica (RA) ?</h2>\n            \n            <small>Ten en cuenta que esta calculadora corresponde a un ejercicio de simulación, por lo que el resultado obtenido puede variar con respecto a los cálculos de Banner. </small>\n            <br/>\n            <br/>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <form onSubmit={this.calcularPPS.bind(this)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"CC\" className=\"text-secondary\">Créditos Totales Cursados (o Créditos intentados) </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      step=\"1\"\n                      name=\"CC\"\n                      placeholder=\"Digite los créditos totales cursados durante toda su carrera (o créditos intentados)\"\n                        ref={this.CCRef}\n                        required=\"required\"\n                        min=\"0\"\n                        \n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"PC\" className=\"text-secondary\">Puntos de calidad para Promedio Ponderado Acumulado (PPA) </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      step=\".01\"\n                      name=\"PC\"\n                      placeholder=\"Digita los puntos de calidad para PPA\"\n                      ref={this.PCRef}\n                      required=\"required\"\n                      min=\"0\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"CS\" className=\"text-secondary\">Créditos matriculados en el semestre</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      step=\"1\"\n                      name=\"CS\"\n                      placeholder=\"Digita los créditos matriculados en el Semestre\"\n                      ref={this.CSRef}\n                      required=\"required\"\n                      min=\"0\"\n                    />\n                  </div>\n\n\n                  <div className=\"form-group text-center\">\n                    <input onClick={this.handleOnClick} type=\"submit\" value=\"Calcular PPS\" className=\"btn btn-success mr-2\" />\n                    <a href=\"/calculadora3ernota/\" className=\"btn btn-info\">Reiniciar</a>\n                  </div>\n                </form>\n              </div>\n            </div>\n            <div className=\"mt-2\" ref={this.myRef}>\n              {this.mostrarResultado()}\n            </div>\n            </div>\n    );\n  }\n}\n\nexport default CalculaPPS;\n","import React from 'react';\nimport logo from './logo.png';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport CalculaPPP from './CalculaPPP';\nimport CalculaPPS from './CalculaPPS';\nimport 'react-tabs/style/react-tabs.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {nota3: 0,tabIndex: 0}\n    this.myRef = React.createRef();\n    //this.state = { }; //Para los tabs\n  }\n\n  aproximarDecimales(num){\n        \n    return +(Math.round(num + \"e+2\")  + \"e-2\");\n  }\n  \n  /* Variables para la parte de las notas */\n  nota1Ref = React.createRef();\n  nota2Ref = React.createRef(); \n   /* Fin Variables para la parte de las notas */\n\n\n   handleOnClick = (event) => {\n    //.current is verification that your element has rendered\n    if(this.myRef.current){\n      this.myRef.current.scrollIntoView({ \n         behavior: \"smooth\", \n         block: \"nearest\"\n      })\n  }\n}\n\ncomponentDidMount = () => this.handleOnClick();\ncomponentDidUpdate = () => this.handleOnClick();\n \n  /* Metodo para el calculo de la nota */\n  calcularNota(e) {\n    e.preventDefault();    \n\n    let nota1 = this.nota1Ref.current.value;\n    let nota2 = this.nota2Ref.current.value;\n\n    this.setState({\n      nota3: ( 3 - ( (nota1 * .30) + (nota2 * .35) ) ) / 0.35\n    });\n\n    \n    return this.state.nota3;\n  }\n\n  mostrarResultado = () => {\n\n    if (this.state.nota3 === 0) return null;\n\n    return (\n      <h3 className=\"text-center alert alert-info\">\n        La nota mínima requerida para aprobar la asignatura es:<br/><h2><strong className=\"\">{this.aproximarDecimales(this.state.nota3)}</strong></h2>\n      </h3>\n    )\n  }\n  /* Fin Metodo para el calculo de la nota */\n  \n  render() {\n    return (\n      //Logo\n      <div>\n        <div className=\"container mt-5\">\n        <div className=\"row justify-content-center text-white\">\n          <div className=\"col-md-6\">\n      <img src={logo} alt=\"Logo\" className=\"img-fluid mb-5\"/>\n      </div>\n      </div>\n      </div>\n\n      <div className=\"container mt-5\">\n      <div className=\"row justify-content-center text-white\">\n        <div className=\"col-md-9\">\n      <Tabs forceRenderTabPanel='true' selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n        <TabList>\n          <Tab>Calcunota</Tab>\n          <Tab>Cálculo para superar PA o RA</Tab>\n          <Tab>Calcupromedio</Tab>\n        </TabList>\n        <TabPanel>\n            {/*\n            <h1 className=\"text-center\">Calculadora</h1>\n            */}\n            <h2 className=\"text-center\">¿Cuánto debo obtener en el 3er corte para aprobar una asignatura?</h2>\n            <small>Ten en cuenta que esta calculadora corresponde a un ejercicio de simulación, por lo que el resultado obtenido puede variar con respecto a los cálculos de Banner. </small>\n            <br/>\n            <br/>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <form onSubmit={this.calcularNota.bind(this)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"nota1\" className=\"text-secondary\">Nota 1er corte</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      step=\".01\"\n                      name=\"nota1\"\n                      placeholder=\"Digita la nota del 1er corte\"\n                        ref={this.nota1Ref}\n                        required=\"required\"\n                        min=\"0\"\n                        max=\"5\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"nota2\" className=\"text-secondary\">Nota 2do corte</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      step=\".01\"\n                      name=\"nota1\"\n                      placeholder=\"Digita la nota del 2do corte\"\n                      ref={this.nota2Ref}\n                      required=\"required\"\n                      min=\"0\"\n                      max=\"5\"\n                    />\n                  </div>\n                  <div className=\"form-group text-center\">\n                    <input  onClick={this.handleOnClick} type=\"submit\" value=\"Calcular Nota\" className=\"btn btn-success mr-2\" />\n                    <a href=\"/calculadora3ernota/\" className=\"btn btn-info\">Reiniciar</a>\n                  </div>\n                </form>\n              </div>\n            </div>\n            \n            <div className=\"mt-2\" ref={this.myRef}>\n              {this.mostrarResultado()}\n            </div>\n            \n        </TabPanel>\n        <TabPanel>\n            <CalculaPPS/>\n        </TabPanel>\n\n        <TabPanel>              \n            <CalculaPPP/>\n        </TabPanel>\n      </Tabs>\n      </div>\n      </div>   \n            </div>\n            </div>  \n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//ReactDOM.render(<CalculaPPS />, document.getElementById('pps'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.de6fb0dc.png\";"],"sourceRoot":""}